Terminals unused in grammar

   FOR
   SWITCH
   CASE
   COLON
   DEFAULT
   ArrayDef
   ArrayUse
   StructDec
   StructDef
   StructVal
   EXT_DEF_LIST
   EXT_VAR_DEF
   FUNC_DEF
   FUNC_DEC
   EXT_DEC_LIST
   PARAM_LIST
   PARAM_DEC
   VAR_DEF
   DEC_LIST
   DEF_LIST
   COMP_STM
   STM_LIST
   EXP_STMT
   IF_THEN
   IF_THEN_ELSE
   FUNC_CALL
   ARGS
   FUNCTION
   PARAM
   ARG
   CALL
   LABEL
   GOTO
   JLT
   JLE
   JGT
   JGE
   EQ
   NEQ


Grammar

    0 $accept: program $end

    1 program: ExtDefList

    2 ExtDefList: /* empty */
    3           | ExtDef ExtDefList

    4 ExtDef: Specifier ExtDecList SEMI
    5       | Specifier FuncDec CompSt
    6       | StructSpecifier SEMI
    7       | error SEMI

    8 StructSpecifier: STRUCT StructName LC SDefList RC
    9                | STRUCT ID

   10 StructName: ID
   11           | /* empty */

   12 Specifier: TYPE
   13          | StructSpecifier

   14 ExtDecList: VarDec
   15           | VarDec COMMA ExtDecList

   16 VarDec: ID
   17       | VarDec LB INT RB

   18 FuncDec: ID LP VarList RP
   19        | ID LP RP

   20 VarList: ParamDec
   21        | ParamDec COMMA VarList

   22 ParamDec: Specifier VarDec

   23 CompSt: LC DefList StmList RC

   24 StmList: /* empty */
   25        | Stmt StmList

   26 Stmt: Exp SEMI
   27     | CompSt
   28     | RETURN Exp SEMI
   29     | IF LP Exp RP Stmt
   30     | IF LP Exp RP Stmt ELSE Stmt
   31     | WHILE LP Exp RP LoopStmt

   32 LoopCompSt: LC DefList LoopStmList RC

   33 LoopStmList: /* empty */
   34            | LoopStmt LoopStmList

   35 LoopStmt: Exp SEMI
   36         | LoopCompSt
   37         | RETURN Exp SEMI
   38         | IF LP Exp RP LoopStmt
   39         | IF LP Exp RP LoopStmt ELSE LoopStmt
   40         | WHILE LP Exp RP LoopStmt
   41         | CONTINUE SEMI
   42         | BREAK SEMI

   43 DefList: /* empty */
   44        | Def DefList
   45        | error SEMI

   46 Def: Specifier DecList SEMI

   47 DecList: Dec
   48        | Dec COMMA DecList

   49 Dec: VarDec
   50    | VarDec ASSIGNOP Exp

   51 SDefList: /* empty */
   52         | SDef SDefList
   53         | error SEMI

   54 SDef: Specifier SDecList SEMI

   55 SDecList: SDec
   56         | SDec COMMA SDecList

   57 SDec: VarDec

   58 Exp: Exp ASSIGNOP Exp
   59    | Exp AND Exp
   60    | Exp OR Exp
   61    | Exp RELOP Exp
   62    | Exp PLUS Exp
   63    | Exp MINUS Exp
   64    | Exp STAR Exp
   65    | Exp DIV Exp
   66    | LP Exp RP
   67    | MINUS Exp
   68    | NOT Exp
   69    | DPLUS Exp
   70    | Exp DPLUS
   71    | ID LP Args RP
   72    | ID LP RP
   73    | ID
   74    | INT
   75    | FLOAT
   76    | CHAR
   77    | SelfPlusL
   78    | SelfPlusR
   79    | SelfDecL
   80    | SelfDecR
   81    | ID LB Exp RB
   82    | Exp DOT ID

   83 Args: Exp COMMA Args
   84     | Exp


Terminals, with rules where they appear

$end (0) 0
error (256) 7 45 53
INT (258) 17 74
ID (259) 9 10 16 18 19 71 72 73 81 82
RELOP (260) 61
TYPE (261) 12
FLOAT (262) 75
CHAR (263) 76
SelfPlusL (264) 77
SelfPlusR (265) 78
SelfDecL (266) 79
SelfDecR (267) 80
BREAK (268) 42
CONTINUE (269) 41
STRUCT (270) 8 9
DPLUS (271) 69 70
LP (272) 18 19 29 30 31 38 39 40 66 71 72
RP (273) 18 19 29 30 31 38 39 40 66 71 72
LC (274) 8 23 32
RC (275) 8 23 32
SEMI (276) 4 6 7 26 28 35 37 41 42 45 46 53 54
COMMA (277) 15 21 48 56 83
PLUS (278) 62
MINUS (279) 63 67
STAR (280) 64
DIV (281) 65
ASSIGNOP (282) 50 58
AND (283) 59
OR (284) 60
NOT (285) 68
IF (286) 29 30 38 39
ELSE (287) 30 39
WHILE (288) 31 40
RETURN (289) 28 37
FOR (290)
SWITCH (291)
CASE (292)
COLON (293)
DEFAULT (294)
LB (295) 17 81
RB (296) 17 81
DOT (297) 82
ArrayDef (298)
ArrayUse (299)
StructDec (300)
StructDef (301)
StructVal (302)
EXT_DEF_LIST (303)
EXT_VAR_DEF (304)
FUNC_DEF (305)
FUNC_DEC (306)
EXT_DEC_LIST (307)
PARAM_LIST (308)
PARAM_DEC (309)
VAR_DEF (310)
DEC_LIST (311)
DEF_LIST (312)
COMP_STM (313)
STM_LIST (314)
EXP_STMT (315)
IF_THEN (316)
IF_THEN_ELSE (317)
FUNC_CALL (318)
ARGS (319)
FUNCTION (320)
PARAM (321)
ARG (322)
CALL (323)
LABEL (324)
GOTO (325)
JLT (326)
JLE (327)
JGT (328)
JGE (329)
EQ (330)
NEQ (331)
UMINUS (332)
LOWER_THEN_ELSE (333)


Nonterminals, with rules where they appear

$accept (79)
    on left: 0
program (80)
    on left: 1, on right: 0
ExtDefList (81)
    on left: 2 3, on right: 1 3
ExtDef (82)
    on left: 4 5 6 7, on right: 3
StructSpecifier (83)
    on left: 8 9, on right: 6 13
StructName (84)
    on left: 10 11, on right: 8
Specifier (85)
    on left: 12 13, on right: 4 5 22 46 54
ExtDecList (86)
    on left: 14 15, on right: 4 15
VarDec (87)
    on left: 16 17, on right: 14 15 17 22 49 50 57
FuncDec (88)
    on left: 18 19, on right: 5
VarList (89)
    on left: 20 21, on right: 18 21
ParamDec (90)
    on left: 22, on right: 20 21
CompSt (91)
    on left: 23, on right: 5 27
StmList (92)
    on left: 24 25, on right: 23 25
Stmt (93)
    on left: 26 27 28 29 30 31, on right: 25 29 30
LoopCompSt (94)
    on left: 32, on right: 36
LoopStmList (95)
    on left: 33 34, on right: 32 34
LoopStmt (96)
    on left: 35 36 37 38 39 40 41 42, on right: 31 34 38 39 40
DefList (97)
    on left: 43 44 45, on right: 23 32 44
Def (98)
    on left: 46, on right: 44
DecList (99)
    on left: 47 48, on right: 46 48
Dec (100)
    on left: 49 50, on right: 47 48
SDefList (101)
    on left: 51 52 53, on right: 8 52
SDef (102)
    on left: 54, on right: 52
SDecList (103)
    on left: 55 56, on right: 54 56
SDec (104)
    on left: 57, on right: 55 56
Exp (105)
    on left: 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75
    76 77 78 79 80 81 82, on right: 26 28 29 30 31 35 37 38 39 40 50
    58 59 60 61 62 63 64 65 66 67 68 69 70 81 82 83 84
Args (106)
    on left: 83 84, on right: 71 83


state 0

    0 $accept: . program $end

    error   shift, and go to state 1
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    $end  reduce using rule 2 (ExtDefList)

    program          go to state 4
    ExtDefList       go to state 5
    ExtDef           go to state 6
    StructSpecifier  go to state 7
    Specifier        go to state 8


state 1

    7 ExtDef: error . SEMI

    SEMI  shift, and go to state 9


state 2

   12 Specifier: TYPE .

    $default  reduce using rule 12 (Specifier)


state 3

    8 StructSpecifier: STRUCT . StructName LC SDefList RC
    9                | STRUCT . ID

    ID  shift, and go to state 10

    $default  reduce using rule 11 (StructName)

    StructName  go to state 11


state 4

    0 $accept: program . $end

    $end  shift, and go to state 12


state 5

    1 program: ExtDefList .

    $default  reduce using rule 1 (program)


state 6

    3 ExtDefList: ExtDef . ExtDefList

    error   shift, and go to state 1
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    $end  reduce using rule 2 (ExtDefList)

    ExtDefList       go to state 13
    ExtDef           go to state 6
    StructSpecifier  go to state 7
    Specifier        go to state 8


state 7

    6 ExtDef: StructSpecifier . SEMI
   13 Specifier: StructSpecifier .

    SEMI  shift, and go to state 14

    $default  reduce using rule 13 (Specifier)


state 8

    4 ExtDef: Specifier . ExtDecList SEMI
    5       | Specifier . FuncDec CompSt

    ID  shift, and go to state 15

    ExtDecList  go to state 16
    VarDec      go to state 17
    FuncDec     go to state 18


state 9

    7 ExtDef: error SEMI .

    $default  reduce using rule 7 (ExtDef)


state 10

    9 StructSpecifier: STRUCT ID .
   10 StructName: ID .

    LC        reduce using rule 10 (StructName)
    $default  reduce using rule 9 (StructSpecifier)


state 11

    8 StructSpecifier: STRUCT StructName . LC SDefList RC

    LC  shift, and go to state 19


state 12

    0 $accept: program $end .

    $default  accept


state 13

    3 ExtDefList: ExtDef ExtDefList .

    $default  reduce using rule 3 (ExtDefList)


state 14

    6 ExtDef: StructSpecifier SEMI .

    $default  reduce using rule 6 (ExtDef)


state 15

   16 VarDec: ID .
   18 FuncDec: ID . LP VarList RP
   19        | ID . LP RP

    LP  shift, and go to state 20

    $default  reduce using rule 16 (VarDec)


state 16

    4 ExtDef: Specifier ExtDecList . SEMI

    SEMI  shift, and go to state 21


state 17

   14 ExtDecList: VarDec .
   15           | VarDec . COMMA ExtDecList
   17 VarDec: VarDec . LB INT RB

    COMMA  shift, and go to state 22
    LB     shift, and go to state 23

    $default  reduce using rule 14 (ExtDecList)


state 18

    5 ExtDef: Specifier FuncDec . CompSt

    LC  shift, and go to state 24

    CompSt  go to state 25


state 19

    8 StructSpecifier: STRUCT StructName LC . SDefList RC

    error   shift, and go to state 26
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    RC  reduce using rule 51 (SDefList)

    StructSpecifier  go to state 27
    Specifier        go to state 28
    SDefList         go to state 29
    SDef             go to state 30


state 20

   18 FuncDec: ID LP . VarList RP
   19        | ID LP . RP

    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3
    RP      shift, and go to state 31

    StructSpecifier  go to state 27
    Specifier        go to state 32
    VarList          go to state 33
    ParamDec         go to state 34


state 21

    4 ExtDef: Specifier ExtDecList SEMI .

    $default  reduce using rule 4 (ExtDef)


state 22

   15 ExtDecList: VarDec COMMA . ExtDecList

    ID  shift, and go to state 35

    ExtDecList  go to state 36
    VarDec      go to state 17


state 23

   17 VarDec: VarDec LB . INT RB

    INT  shift, and go to state 37


state 24

   23 CompSt: LC . DefList StmList RC

    error   shift, and go to state 38
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    INT        reduce using rule 43 (DefList)
    ID         reduce using rule 43 (DefList)
    FLOAT      reduce using rule 43 (DefList)
    CHAR       reduce using rule 43 (DefList)
    SelfPlusL  reduce using rule 43 (DefList)
    SelfPlusR  reduce using rule 43 (DefList)
    SelfDecL   reduce using rule 43 (DefList)
    SelfDecR   reduce using rule 43 (DefList)
    DPLUS      reduce using rule 43 (DefList)
    LP         reduce using rule 43 (DefList)
    LC         reduce using rule 43 (DefList)
    RC         reduce using rule 43 (DefList)
    MINUS      reduce using rule 43 (DefList)
    NOT        reduce using rule 43 (DefList)
    IF         reduce using rule 43 (DefList)
    WHILE      reduce using rule 43 (DefList)
    RETURN     reduce using rule 43 (DefList)

    StructSpecifier  go to state 27
    Specifier        go to state 39
    DefList          go to state 40
    Def              go to state 41


state 25

    5 ExtDef: Specifier FuncDec CompSt .

    $default  reduce using rule 5 (ExtDef)


state 26

   53 SDefList: error . SEMI

    SEMI  shift, and go to state 42


state 27

   13 Specifier: StructSpecifier .

    $default  reduce using rule 13 (Specifier)


state 28

   54 SDef: Specifier . SDecList SEMI

    ID  shift, and go to state 35

    VarDec    go to state 43
    SDecList  go to state 44
    SDec      go to state 45


state 29

    8 StructSpecifier: STRUCT StructName LC SDefList . RC

    RC  shift, and go to state 46


state 30

   52 SDefList: SDef . SDefList

    error   shift, and go to state 26
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    RC  reduce using rule 51 (SDefList)

    StructSpecifier  go to state 27
    Specifier        go to state 28
    SDefList         go to state 47
    SDef             go to state 30


state 31

   19 FuncDec: ID LP RP .

    $default  reduce using rule 19 (FuncDec)


state 32

   22 ParamDec: Specifier . VarDec

    ID  shift, and go to state 35

    VarDec  go to state 48


state 33

   18 FuncDec: ID LP VarList . RP

    RP  shift, and go to state 49


state 34

   20 VarList: ParamDec .
   21        | ParamDec . COMMA VarList

    COMMA  shift, and go to state 50

    $default  reduce using rule 20 (VarList)


state 35

   16 VarDec: ID .

    $default  reduce using rule 16 (VarDec)


state 36

   15 ExtDecList: VarDec COMMA ExtDecList .

    $default  reduce using rule 15 (ExtDecList)


state 37

   17 VarDec: VarDec LB INT . RB

    RB  shift, and go to state 51


state 38

   45 DefList: error . SEMI

    SEMI  shift, and go to state 52


state 39

   46 Def: Specifier . DecList SEMI

    ID  shift, and go to state 35

    VarDec   go to state 53
    DecList  go to state 54
    Dec      go to state 55


state 40

   23 CompSt: LC DefList . StmList RC

    INT        shift, and go to state 56
    ID         shift, and go to state 57
    FLOAT      shift, and go to state 58
    CHAR       shift, and go to state 59
    SelfPlusL  shift, and go to state 60
    SelfPlusR  shift, and go to state 61
    SelfDecL   shift, and go to state 62
    SelfDecR   shift, and go to state 63
    DPLUS      shift, and go to state 64
    LP         shift, and go to state 65
    LC         shift, and go to state 24
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67
    IF         shift, and go to state 68
    WHILE      shift, and go to state 69
    RETURN     shift, and go to state 70

    $default  reduce using rule 24 (StmList)

    CompSt   go to state 71
    StmList  go to state 72
    Stmt     go to state 73
    Exp      go to state 74


state 41

   44 DefList: Def . DefList

    error   shift, and go to state 38
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    INT        reduce using rule 43 (DefList)
    ID         reduce using rule 43 (DefList)
    FLOAT      reduce using rule 43 (DefList)
    CHAR       reduce using rule 43 (DefList)
    SelfPlusL  reduce using rule 43 (DefList)
    SelfPlusR  reduce using rule 43 (DefList)
    SelfDecL   reduce using rule 43 (DefList)
    SelfDecR   reduce using rule 43 (DefList)
    BREAK      reduce using rule 43 (DefList)
    CONTINUE   reduce using rule 43 (DefList)
    DPLUS      reduce using rule 43 (DefList)
    LP         reduce using rule 43 (DefList)
    LC         reduce using rule 43 (DefList)
    RC         reduce using rule 43 (DefList)
    MINUS      reduce using rule 43 (DefList)
    NOT        reduce using rule 43 (DefList)
    IF         reduce using rule 43 (DefList)
    WHILE      reduce using rule 43 (DefList)
    RETURN     reduce using rule 43 (DefList)

    StructSpecifier  go to state 27
    Specifier        go to state 39
    DefList          go to state 75
    Def              go to state 41


state 42

   53 SDefList: error SEMI .

    $default  reduce using rule 53 (SDefList)


state 43

   17 VarDec: VarDec . LB INT RB
   57 SDec: VarDec .

    LB  shift, and go to state 23

    $default  reduce using rule 57 (SDec)


state 44

   54 SDef: Specifier SDecList . SEMI

    SEMI  shift, and go to state 76


state 45

   55 SDecList: SDec .
   56         | SDec . COMMA SDecList

    COMMA  shift, and go to state 77

    $default  reduce using rule 55 (SDecList)


state 46

    8 StructSpecifier: STRUCT StructName LC SDefList RC .

    $default  reduce using rule 8 (StructSpecifier)


state 47

   52 SDefList: SDef SDefList .

    $default  reduce using rule 52 (SDefList)


state 48

   17 VarDec: VarDec . LB INT RB
   22 ParamDec: Specifier VarDec .

    LB  shift, and go to state 23

    $default  reduce using rule 22 (ParamDec)


state 49

   18 FuncDec: ID LP VarList RP .

    $default  reduce using rule 18 (FuncDec)


state 50

   21 VarList: ParamDec COMMA . VarList

    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    StructSpecifier  go to state 27
    Specifier        go to state 32
    VarList          go to state 78
    ParamDec         go to state 34


state 51

   17 VarDec: VarDec LB INT RB .

    $default  reduce using rule 17 (VarDec)


state 52

   45 DefList: error SEMI .

    $default  reduce using rule 45 (DefList)


state 53

   17 VarDec: VarDec . LB INT RB
   49 Dec: VarDec .
   50    | VarDec . ASSIGNOP Exp

    ASSIGNOP  shift, and go to state 79
    LB        shift, and go to state 23

    $default  reduce using rule 49 (Dec)


state 54

   46 Def: Specifier DecList . SEMI

    SEMI  shift, and go to state 80


state 55

   47 DecList: Dec .
   48        | Dec . COMMA DecList

    COMMA  shift, and go to state 81

    $default  reduce using rule 47 (DecList)


state 56

   74 Exp: INT .

    $default  reduce using rule 74 (Exp)


state 57

   71 Exp: ID . LP Args RP
   72    | ID . LP RP
   73    | ID .
   81    | ID . LB Exp RB

    LP  shift, and go to state 82
    LB  shift, and go to state 83

    $default  reduce using rule 73 (Exp)


state 58

   75 Exp: FLOAT .

    $default  reduce using rule 75 (Exp)


state 59

   76 Exp: CHAR .

    $default  reduce using rule 76 (Exp)


state 60

   77 Exp: SelfPlusL .

    $default  reduce using rule 77 (Exp)


state 61

   78 Exp: SelfPlusR .

    $default  reduce using rule 78 (Exp)


state 62

   79 Exp: SelfDecL .

    $default  reduce using rule 79 (Exp)


state 63

   80 Exp: SelfDecR .

    $default  reduce using rule 80 (Exp)


state 64

   69 Exp: DPLUS . Exp

    INT        shift, and go to state 56
    ID         shift, and go to state 57
    FLOAT      shift, and go to state 58
    CHAR       shift, and go to state 59
    SelfPlusL  shift, and go to state 60
    SelfPlusR  shift, and go to state 61
    SelfDecL   shift, and go to state 62
    SelfDecR   shift, and go to state 63
    DPLUS      shift, and go to state 64
    LP         shift, and go to state 65
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67

    Exp  go to state 84


state 65

   66 Exp: LP . Exp RP

    INT        shift, and go to state 56
    ID         shift, and go to state 57
    FLOAT      shift, and go to state 58
    CHAR       shift, and go to state 59
    SelfPlusL  shift, and go to state 60
    SelfPlusR  shift, and go to state 61
    SelfDecL   shift, and go to state 62
    SelfDecR   shift, and go to state 63
    DPLUS      shift, and go to state 64
    LP         shift, and go to state 65
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67

    Exp  go to state 85


state 66

   67 Exp: MINUS . Exp

    INT        shift, and go to state 56
    ID         shift, and go to state 57
    FLOAT      shift, and go to state 58
    CHAR       shift, and go to state 59
    SelfPlusL  shift, and go to state 60
    SelfPlusR  shift, and go to state 61
    SelfDecL   shift, and go to state 62
    SelfDecR   shift, and go to state 63
    DPLUS      shift, and go to state 64
    LP         shift, and go to state 65
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67

    Exp  go to state 86


state 67

   68 Exp: NOT . Exp

    INT        shift, and go to state 56
    ID         shift, and go to state 57
    FLOAT      shift, and go to state 58
    CHAR       shift, and go to state 59
    SelfPlusL  shift, and go to state 60
    SelfPlusR  shift, and go to state 61
    SelfDecL   shift, and go to state 62
    SelfDecR   shift, and go to state 63
    DPLUS      shift, and go to state 64
    LP         shift, and go to state 65
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67

    Exp  go to state 87


state 68

   29 Stmt: IF . LP Exp RP Stmt
   30     | IF . LP Exp RP Stmt ELSE Stmt

    LP  shift, and go to state 88


state 69

   31 Stmt: WHILE . LP Exp RP LoopStmt

    LP  shift, and go to state 89


state 70

   28 Stmt: RETURN . Exp SEMI

    INT        shift, and go to state 56
    ID         shift, and go to state 57
    FLOAT      shift, and go to state 58
    CHAR       shift, and go to state 59
    SelfPlusL  shift, and go to state 60
    SelfPlusR  shift, and go to state 61
    SelfDecL   shift, and go to state 62
    SelfDecR   shift, and go to state 63
    DPLUS      shift, and go to state 64
    LP         shift, and go to state 65
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67

    Exp  go to state 90


state 71

   27 Stmt: CompSt .

    $default  reduce using rule 27 (Stmt)


state 72

   23 CompSt: LC DefList StmList . RC

    RC  shift, and go to state 91


state 73

   25 StmList: Stmt . StmList

    INT        shift, and go to state 56
    ID         shift, and go to state 57
    FLOAT      shift, and go to state 58
    CHAR       shift, and go to state 59
    SelfPlusL  shift, and go to state 60
    SelfPlusR  shift, and go to state 61
    SelfDecL   shift, and go to state 62
    SelfDecR   shift, and go to state 63
    DPLUS      shift, and go to state 64
    LP         shift, and go to state 65
    LC         shift, and go to state 24
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67
    IF         shift, and go to state 68
    WHILE      shift, and go to state 69
    RETURN     shift, and go to state 70

    $default  reduce using rule 24 (StmList)

    CompSt   go to state 71
    StmList  go to state 92
    Stmt     go to state 73
    Exp      go to state 74


state 74

   26 Stmt: Exp . SEMI
   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   70    | Exp . DPLUS
   82    | Exp . DOT ID

    RELOP     shift, and go to state 93
    DPLUS     shift, and go to state 94
    SEMI      shift, and go to state 95
    PLUS      shift, and go to state 96
    MINUS     shift, and go to state 97
    STAR      shift, and go to state 98
    DIV       shift, and go to state 99
    ASSIGNOP  shift, and go to state 100
    AND       shift, and go to state 101
    OR        shift, and go to state 102
    DOT       shift, and go to state 103


state 75

   44 DefList: Def DefList .

    $default  reduce using rule 44 (DefList)


state 76

   54 SDef: Specifier SDecList SEMI .

    $default  reduce using rule 54 (SDef)


state 77

   56 SDecList: SDec COMMA . SDecList

    ID  shift, and go to state 35

    VarDec    go to state 43
    SDecList  go to state 104
    SDec      go to state 45


state 78

   21 VarList: ParamDec COMMA VarList .

    $default  reduce using rule 21 (VarList)


state 79

   50 Dec: VarDec ASSIGNOP . Exp

    INT        shift, and go to state 56
    ID         shift, and go to state 57
    FLOAT      shift, and go to state 58
    CHAR       shift, and go to state 59
    SelfPlusL  shift, and go to state 60
    SelfPlusR  shift, and go to state 61
    SelfDecL   shift, and go to state 62
    SelfDecR   shift, and go to state 63
    DPLUS      shift, and go to state 64
    LP         shift, and go to state 65
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67

    Exp  go to state 105


state 80

   46 Def: Specifier DecList SEMI .

    $default  reduce using rule 46 (Def)


state 81

   48 DecList: Dec COMMA . DecList

    ID  shift, and go to state 35

    VarDec   go to state 53
    DecList  go to state 106
    Dec      go to state 55


state 82

   71 Exp: ID LP . Args RP
   72    | ID LP . RP

    INT        shift, and go to state 56
    ID         shift, and go to state 57
    FLOAT      shift, and go to state 58
    CHAR       shift, and go to state 59
    SelfPlusL  shift, and go to state 60
    SelfPlusR  shift, and go to state 61
    SelfDecL   shift, and go to state 62
    SelfDecR   shift, and go to state 63
    DPLUS      shift, and go to state 64
    LP         shift, and go to state 65
    RP         shift, and go to state 107
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67

    Exp   go to state 108
    Args  go to state 109


state 83

   81 Exp: ID LB . Exp RB

    INT        shift, and go to state 56
    ID         shift, and go to state 57
    FLOAT      shift, and go to state 58
    CHAR       shift, and go to state 59
    SelfPlusL  shift, and go to state 60
    SelfPlusR  shift, and go to state 61
    SelfDecL   shift, and go to state 62
    SelfDecR   shift, and go to state 63
    DPLUS      shift, and go to state 64
    LP         shift, and go to state 65
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67

    Exp  go to state 110


state 84

   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   69    | DPLUS Exp .
   70    | Exp . DPLUS
   82    | Exp . DOT ID

    DPLUS  shift, and go to state 94
    DOT    shift, and go to state 103

    $default  reduce using rule 69 (Exp)


state 85

   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   66    | LP Exp . RP
   70    | Exp . DPLUS
   82    | Exp . DOT ID

    RELOP     shift, and go to state 93
    DPLUS     shift, and go to state 94
    RP        shift, and go to state 111
    PLUS      shift, and go to state 96
    MINUS     shift, and go to state 97
    STAR      shift, and go to state 98
    DIV       shift, and go to state 99
    ASSIGNOP  shift, and go to state 100
    AND       shift, and go to state 101
    OR        shift, and go to state 102
    DOT       shift, and go to state 103


state 86

   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   67    | MINUS Exp .
   70    | Exp . DPLUS
   82    | Exp . DOT ID

    DPLUS  shift, and go to state 94
    DOT    shift, and go to state 103

    $default  reduce using rule 67 (Exp)


state 87

   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   68    | NOT Exp .
   70    | Exp . DPLUS
   82    | Exp . DOT ID

    DPLUS  shift, and go to state 94
    DOT    shift, and go to state 103

    $default  reduce using rule 68 (Exp)


state 88

   29 Stmt: IF LP . Exp RP Stmt
   30     | IF LP . Exp RP Stmt ELSE Stmt

    INT        shift, and go to state 56
    ID         shift, and go to state 57
    FLOAT      shift, and go to state 58
    CHAR       shift, and go to state 59
    SelfPlusL  shift, and go to state 60
    SelfPlusR  shift, and go to state 61
    SelfDecL   shift, and go to state 62
    SelfDecR   shift, and go to state 63
    DPLUS      shift, and go to state 64
    LP         shift, and go to state 65
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67

    Exp  go to state 112


state 89

   31 Stmt: WHILE LP . Exp RP LoopStmt

    INT        shift, and go to state 56
    ID         shift, and go to state 57
    FLOAT      shift, and go to state 58
    CHAR       shift, and go to state 59
    SelfPlusL  shift, and go to state 60
    SelfPlusR  shift, and go to state 61
    SelfDecL   shift, and go to state 62
    SelfDecR   shift, and go to state 63
    DPLUS      shift, and go to state 64
    LP         shift, and go to state 65
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67

    Exp  go to state 113


state 90

   28 Stmt: RETURN Exp . SEMI
   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   70    | Exp . DPLUS
   82    | Exp . DOT ID

    RELOP     shift, and go to state 93
    DPLUS     shift, and go to state 94
    SEMI      shift, and go to state 114
    PLUS      shift, and go to state 96
    MINUS     shift, and go to state 97
    STAR      shift, and go to state 98
    DIV       shift, and go to state 99
    ASSIGNOP  shift, and go to state 100
    AND       shift, and go to state 101
    OR        shift, and go to state 102
    DOT       shift, and go to state 103


state 91

   23 CompSt: LC DefList StmList RC .

    $default  reduce using rule 23 (CompSt)


state 92

   25 StmList: Stmt StmList .

    $default  reduce using rule 25 (StmList)


state 93

   61 Exp: Exp RELOP . Exp

    INT        shift, and go to state 56
    ID         shift, and go to state 57
    FLOAT      shift, and go to state 58
    CHAR       shift, and go to state 59
    SelfPlusL  shift, and go to state 60
    SelfPlusR  shift, and go to state 61
    SelfDecL   shift, and go to state 62
    SelfDecR   shift, and go to state 63
    DPLUS      shift, and go to state 64
    LP         shift, and go to state 65
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67

    Exp  go to state 115


state 94

   70 Exp: Exp DPLUS .

    $default  reduce using rule 70 (Exp)


state 95

   26 Stmt: Exp SEMI .

    $default  reduce using rule 26 (Stmt)


state 96

   62 Exp: Exp PLUS . Exp

    INT        shift, and go to state 56
    ID         shift, and go to state 57
    FLOAT      shift, and go to state 58
    CHAR       shift, and go to state 59
    SelfPlusL  shift, and go to state 60
    SelfPlusR  shift, and go to state 61
    SelfDecL   shift, and go to state 62
    SelfDecR   shift, and go to state 63
    DPLUS      shift, and go to state 64
    LP         shift, and go to state 65
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67

    Exp  go to state 116


state 97

   63 Exp: Exp MINUS . Exp

    INT        shift, and go to state 56
    ID         shift, and go to state 57
    FLOAT      shift, and go to state 58
    CHAR       shift, and go to state 59
    SelfPlusL  shift, and go to state 60
    SelfPlusR  shift, and go to state 61
    SelfDecL   shift, and go to state 62
    SelfDecR   shift, and go to state 63
    DPLUS      shift, and go to state 64
    LP         shift, and go to state 65
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67

    Exp  go to state 117


state 98

   64 Exp: Exp STAR . Exp

    INT        shift, and go to state 56
    ID         shift, and go to state 57
    FLOAT      shift, and go to state 58
    CHAR       shift, and go to state 59
    SelfPlusL  shift, and go to state 60
    SelfPlusR  shift, and go to state 61
    SelfDecL   shift, and go to state 62
    SelfDecR   shift, and go to state 63
    DPLUS      shift, and go to state 64
    LP         shift, and go to state 65
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67

    Exp  go to state 118


state 99

   65 Exp: Exp DIV . Exp

    INT        shift, and go to state 56
    ID         shift, and go to state 57
    FLOAT      shift, and go to state 58
    CHAR       shift, and go to state 59
    SelfPlusL  shift, and go to state 60
    SelfPlusR  shift, and go to state 61
    SelfDecL   shift, and go to state 62
    SelfDecR   shift, and go to state 63
    DPLUS      shift, and go to state 64
    LP         shift, and go to state 65
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67

    Exp  go to state 119


state 100

   58 Exp: Exp ASSIGNOP . Exp

    INT        shift, and go to state 56
    ID         shift, and go to state 57
    FLOAT      shift, and go to state 58
    CHAR       shift, and go to state 59
    SelfPlusL  shift, and go to state 60
    SelfPlusR  shift, and go to state 61
    SelfDecL   shift, and go to state 62
    SelfDecR   shift, and go to state 63
    DPLUS      shift, and go to state 64
    LP         shift, and go to state 65
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67

    Exp  go to state 120


state 101

   59 Exp: Exp AND . Exp

    INT        shift, and go to state 56
    ID         shift, and go to state 57
    FLOAT      shift, and go to state 58
    CHAR       shift, and go to state 59
    SelfPlusL  shift, and go to state 60
    SelfPlusR  shift, and go to state 61
    SelfDecL   shift, and go to state 62
    SelfDecR   shift, and go to state 63
    DPLUS      shift, and go to state 64
    LP         shift, and go to state 65
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67

    Exp  go to state 121


state 102

   60 Exp: Exp OR . Exp

    INT        shift, and go to state 56
    ID         shift, and go to state 57
    FLOAT      shift, and go to state 58
    CHAR       shift, and go to state 59
    SelfPlusL  shift, and go to state 60
    SelfPlusR  shift, and go to state 61
    SelfDecL   shift, and go to state 62
    SelfDecR   shift, and go to state 63
    DPLUS      shift, and go to state 64
    LP         shift, and go to state 65
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67

    Exp  go to state 122


state 103

   82 Exp: Exp DOT . ID

    ID  shift, and go to state 123


state 104

   56 SDecList: SDec COMMA SDecList .

    $default  reduce using rule 56 (SDecList)


state 105

   50 Dec: VarDec ASSIGNOP Exp .
   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   70    | Exp . DPLUS
   82    | Exp . DOT ID

    RELOP     shift, and go to state 93
    DPLUS     shift, and go to state 94
    PLUS      shift, and go to state 96
    MINUS     shift, and go to state 97
    STAR      shift, and go to state 98
    DIV       shift, and go to state 99
    ASSIGNOP  shift, and go to state 100
    AND       shift, and go to state 101
    OR        shift, and go to state 102
    DOT       shift, and go to state 103

    $default  reduce using rule 50 (Dec)


state 106

   48 DecList: Dec COMMA DecList .

    $default  reduce using rule 48 (DecList)


state 107

   72 Exp: ID LP RP .

    $default  reduce using rule 72 (Exp)


state 108

   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   70    | Exp . DPLUS
   82    | Exp . DOT ID
   83 Args: Exp . COMMA Args
   84     | Exp .

    RELOP     shift, and go to state 93
    DPLUS     shift, and go to state 94
    COMMA     shift, and go to state 124
    PLUS      shift, and go to state 96
    MINUS     shift, and go to state 97
    STAR      shift, and go to state 98
    DIV       shift, and go to state 99
    ASSIGNOP  shift, and go to state 100
    AND       shift, and go to state 101
    OR        shift, and go to state 102
    DOT       shift, and go to state 103

    $default  reduce using rule 84 (Args)


state 109

   71 Exp: ID LP Args . RP

    RP  shift, and go to state 125


state 110

   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   70    | Exp . DPLUS
   81    | ID LB Exp . RB
   82    | Exp . DOT ID

    RELOP     shift, and go to state 93
    DPLUS     shift, and go to state 94
    PLUS      shift, and go to state 96
    MINUS     shift, and go to state 97
    STAR      shift, and go to state 98
    DIV       shift, and go to state 99
    ASSIGNOP  shift, and go to state 100
    AND       shift, and go to state 101
    OR        shift, and go to state 102
    RB        shift, and go to state 126
    DOT       shift, and go to state 103


state 111

   66 Exp: LP Exp RP .

    $default  reduce using rule 66 (Exp)


state 112

   29 Stmt: IF LP Exp . RP Stmt
   30     | IF LP Exp . RP Stmt ELSE Stmt
   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   70    | Exp . DPLUS
   82    | Exp . DOT ID

    RELOP     shift, and go to state 93
    DPLUS     shift, and go to state 94
    RP        shift, and go to state 127
    PLUS      shift, and go to state 96
    MINUS     shift, and go to state 97
    STAR      shift, and go to state 98
    DIV       shift, and go to state 99
    ASSIGNOP  shift, and go to state 100
    AND       shift, and go to state 101
    OR        shift, and go to state 102
    DOT       shift, and go to state 103


state 113

   31 Stmt: WHILE LP Exp . RP LoopStmt
   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   70    | Exp . DPLUS
   82    | Exp . DOT ID

    RELOP     shift, and go to state 93
    DPLUS     shift, and go to state 94
    RP        shift, and go to state 128
    PLUS      shift, and go to state 96
    MINUS     shift, and go to state 97
    STAR      shift, and go to state 98
    DIV       shift, and go to state 99
    ASSIGNOP  shift, and go to state 100
    AND       shift, and go to state 101
    OR        shift, and go to state 102
    DOT       shift, and go to state 103


state 114

   28 Stmt: RETURN Exp SEMI .

    $default  reduce using rule 28 (Stmt)


state 115

   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   61    | Exp RELOP Exp .
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   70    | Exp . DPLUS
   82    | Exp . DOT ID

    DPLUS  shift, and go to state 94
    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    DOT    shift, and go to state 103

    $default  reduce using rule 61 (Exp)


state 116

   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   62    | Exp PLUS Exp .
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   70    | Exp . DPLUS
   82    | Exp . DOT ID

    DPLUS  shift, and go to state 94
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    DOT    shift, and go to state 103

    $default  reduce using rule 62 (Exp)


state 117

   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   63    | Exp MINUS Exp .
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   70    | Exp . DPLUS
   82    | Exp . DOT ID

    DPLUS  shift, and go to state 94
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    DOT    shift, and go to state 103

    $default  reduce using rule 63 (Exp)


state 118

   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   64    | Exp STAR Exp .
   65    | Exp . DIV Exp
   70    | Exp . DPLUS
   82    | Exp . DOT ID

    DPLUS  shift, and go to state 94
    DOT    shift, and go to state 103

    $default  reduce using rule 64 (Exp)


state 119

   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   65    | Exp DIV Exp .
   70    | Exp . DPLUS
   82    | Exp . DOT ID

    DPLUS  shift, and go to state 94
    DOT    shift, and go to state 103

    $default  reduce using rule 65 (Exp)


state 120

   58 Exp: Exp . ASSIGNOP Exp
   58    | Exp ASSIGNOP Exp .
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   70    | Exp . DPLUS
   82    | Exp . DOT ID

    RELOP  shift, and go to state 93
    DPLUS  shift, and go to state 94
    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    AND    shift, and go to state 101
    OR     shift, and go to state 102
    DOT    shift, and go to state 103

    $default  reduce using rule 58 (Exp)


state 121

   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   59    | Exp AND Exp .
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   70    | Exp . DPLUS
   82    | Exp . DOT ID

    RELOP  shift, and go to state 93
    DPLUS  shift, and go to state 94
    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    DOT    shift, and go to state 103

    $default  reduce using rule 59 (Exp)


state 122

   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   60    | Exp OR Exp .
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   70    | Exp . DPLUS
   82    | Exp . DOT ID

    RELOP  shift, and go to state 93
    DPLUS  shift, and go to state 94
    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    AND    shift, and go to state 101
    DOT    shift, and go to state 103

    $default  reduce using rule 60 (Exp)


state 123

   82 Exp: Exp DOT ID .

    $default  reduce using rule 82 (Exp)


state 124

   83 Args: Exp COMMA . Args

    INT        shift, and go to state 56
    ID         shift, and go to state 57
    FLOAT      shift, and go to state 58
    CHAR       shift, and go to state 59
    SelfPlusL  shift, and go to state 60
    SelfPlusR  shift, and go to state 61
    SelfDecL   shift, and go to state 62
    SelfDecR   shift, and go to state 63
    DPLUS      shift, and go to state 64
    LP         shift, and go to state 65
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67

    Exp   go to state 108
    Args  go to state 129


state 125

   71 Exp: ID LP Args RP .

    $default  reduce using rule 71 (Exp)


state 126

   81 Exp: ID LB Exp RB .

    $default  reduce using rule 81 (Exp)


state 127

   29 Stmt: IF LP Exp RP . Stmt
   30     | IF LP Exp RP . Stmt ELSE Stmt

    INT        shift, and go to state 56
    ID         shift, and go to state 57
    FLOAT      shift, and go to state 58
    CHAR       shift, and go to state 59
    SelfPlusL  shift, and go to state 60
    SelfPlusR  shift, and go to state 61
    SelfDecL   shift, and go to state 62
    SelfDecR   shift, and go to state 63
    DPLUS      shift, and go to state 64
    LP         shift, and go to state 65
    LC         shift, and go to state 24
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67
    IF         shift, and go to state 68
    WHILE      shift, and go to state 69
    RETURN     shift, and go to state 70

    CompSt  go to state 71
    Stmt    go to state 130
    Exp     go to state 74


state 128

   31 Stmt: WHILE LP Exp RP . LoopStmt

    INT        shift, and go to state 56
    ID         shift, and go to state 57
    FLOAT      shift, and go to state 58
    CHAR       shift, and go to state 59
    SelfPlusL  shift, and go to state 60
    SelfPlusR  shift, and go to state 61
    SelfDecL   shift, and go to state 62
    SelfDecR   shift, and go to state 63
    BREAK      shift, and go to state 131
    CONTINUE   shift, and go to state 132
    DPLUS      shift, and go to state 64
    LP         shift, and go to state 65
    LC         shift, and go to state 133
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67
    IF         shift, and go to state 134
    WHILE      shift, and go to state 135
    RETURN     shift, and go to state 136

    LoopCompSt  go to state 137
    LoopStmt    go to state 138
    Exp         go to state 139


state 129

   83 Args: Exp COMMA Args .

    $default  reduce using rule 83 (Args)


state 130

   29 Stmt: IF LP Exp RP Stmt .
   30     | IF LP Exp RP Stmt . ELSE Stmt

    ELSE  shift, and go to state 140

    $default  reduce using rule 29 (Stmt)


state 131

   42 LoopStmt: BREAK . SEMI

    SEMI  shift, and go to state 141


state 132

   41 LoopStmt: CONTINUE . SEMI

    SEMI  shift, and go to state 142


state 133

   32 LoopCompSt: LC . DefList LoopStmList RC

    error   shift, and go to state 38
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    INT        reduce using rule 43 (DefList)
    ID         reduce using rule 43 (DefList)
    FLOAT      reduce using rule 43 (DefList)
    CHAR       reduce using rule 43 (DefList)
    SelfPlusL  reduce using rule 43 (DefList)
    SelfPlusR  reduce using rule 43 (DefList)
    SelfDecL   reduce using rule 43 (DefList)
    SelfDecR   reduce using rule 43 (DefList)
    BREAK      reduce using rule 43 (DefList)
    CONTINUE   reduce using rule 43 (DefList)
    DPLUS      reduce using rule 43 (DefList)
    LP         reduce using rule 43 (DefList)
    LC         reduce using rule 43 (DefList)
    RC         reduce using rule 43 (DefList)
    MINUS      reduce using rule 43 (DefList)
    NOT        reduce using rule 43 (DefList)
    IF         reduce using rule 43 (DefList)
    WHILE      reduce using rule 43 (DefList)
    RETURN     reduce using rule 43 (DefList)

    StructSpecifier  go to state 27
    Specifier        go to state 39
    DefList          go to state 143
    Def              go to state 41


state 134

   38 LoopStmt: IF . LP Exp RP LoopStmt
   39         | IF . LP Exp RP LoopStmt ELSE LoopStmt

    LP  shift, and go to state 144


state 135

   40 LoopStmt: WHILE . LP Exp RP LoopStmt

    LP  shift, and go to state 145


state 136

   37 LoopStmt: RETURN . Exp SEMI

    INT        shift, and go to state 56
    ID         shift, and go to state 57
    FLOAT      shift, and go to state 58
    CHAR       shift, and go to state 59
    SelfPlusL  shift, and go to state 60
    SelfPlusR  shift, and go to state 61
    SelfDecL   shift, and go to state 62
    SelfDecR   shift, and go to state 63
    DPLUS      shift, and go to state 64
    LP         shift, and go to state 65
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67

    Exp  go to state 146


state 137

   36 LoopStmt: LoopCompSt .

    $default  reduce using rule 36 (LoopStmt)


state 138

   31 Stmt: WHILE LP Exp RP LoopStmt .

    $default  reduce using rule 31 (Stmt)


state 139

   35 LoopStmt: Exp . SEMI
   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   70    | Exp . DPLUS
   82    | Exp . DOT ID

    RELOP     shift, and go to state 93
    DPLUS     shift, and go to state 94
    SEMI      shift, and go to state 147
    PLUS      shift, and go to state 96
    MINUS     shift, and go to state 97
    STAR      shift, and go to state 98
    DIV       shift, and go to state 99
    ASSIGNOP  shift, and go to state 100
    AND       shift, and go to state 101
    OR        shift, and go to state 102
    DOT       shift, and go to state 103


state 140

   30 Stmt: IF LP Exp RP Stmt ELSE . Stmt

    INT        shift, and go to state 56
    ID         shift, and go to state 57
    FLOAT      shift, and go to state 58
    CHAR       shift, and go to state 59
    SelfPlusL  shift, and go to state 60
    SelfPlusR  shift, and go to state 61
    SelfDecL   shift, and go to state 62
    SelfDecR   shift, and go to state 63
    DPLUS      shift, and go to state 64
    LP         shift, and go to state 65
    LC         shift, and go to state 24
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67
    IF         shift, and go to state 68
    WHILE      shift, and go to state 69
    RETURN     shift, and go to state 70

    CompSt  go to state 71
    Stmt    go to state 148
    Exp     go to state 74


state 141

   42 LoopStmt: BREAK SEMI .

    $default  reduce using rule 42 (LoopStmt)


state 142

   41 LoopStmt: CONTINUE SEMI .

    $default  reduce using rule 41 (LoopStmt)


state 143

   32 LoopCompSt: LC DefList . LoopStmList RC

    INT        shift, and go to state 56
    ID         shift, and go to state 57
    FLOAT      shift, and go to state 58
    CHAR       shift, and go to state 59
    SelfPlusL  shift, and go to state 60
    SelfPlusR  shift, and go to state 61
    SelfDecL   shift, and go to state 62
    SelfDecR   shift, and go to state 63
    BREAK      shift, and go to state 131
    CONTINUE   shift, and go to state 132
    DPLUS      shift, and go to state 64
    LP         shift, and go to state 65
    LC         shift, and go to state 133
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67
    IF         shift, and go to state 134
    WHILE      shift, and go to state 135
    RETURN     shift, and go to state 136

    $default  reduce using rule 33 (LoopStmList)

    LoopCompSt   go to state 137
    LoopStmList  go to state 149
    LoopStmt     go to state 150
    Exp          go to state 139


state 144

   38 LoopStmt: IF LP . Exp RP LoopStmt
   39         | IF LP . Exp RP LoopStmt ELSE LoopStmt

    INT        shift, and go to state 56
    ID         shift, and go to state 57
    FLOAT      shift, and go to state 58
    CHAR       shift, and go to state 59
    SelfPlusL  shift, and go to state 60
    SelfPlusR  shift, and go to state 61
    SelfDecL   shift, and go to state 62
    SelfDecR   shift, and go to state 63
    DPLUS      shift, and go to state 64
    LP         shift, and go to state 65
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67

    Exp  go to state 151


state 145

   40 LoopStmt: WHILE LP . Exp RP LoopStmt

    INT        shift, and go to state 56
    ID         shift, and go to state 57
    FLOAT      shift, and go to state 58
    CHAR       shift, and go to state 59
    SelfPlusL  shift, and go to state 60
    SelfPlusR  shift, and go to state 61
    SelfDecL   shift, and go to state 62
    SelfDecR   shift, and go to state 63
    DPLUS      shift, and go to state 64
    LP         shift, and go to state 65
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67

    Exp  go to state 152


state 146

   37 LoopStmt: RETURN Exp . SEMI
   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   70    | Exp . DPLUS
   82    | Exp . DOT ID

    RELOP     shift, and go to state 93
    DPLUS     shift, and go to state 94
    SEMI      shift, and go to state 153
    PLUS      shift, and go to state 96
    MINUS     shift, and go to state 97
    STAR      shift, and go to state 98
    DIV       shift, and go to state 99
    ASSIGNOP  shift, and go to state 100
    AND       shift, and go to state 101
    OR        shift, and go to state 102
    DOT       shift, and go to state 103


state 147

   35 LoopStmt: Exp SEMI .

    $default  reduce using rule 35 (LoopStmt)


state 148

   30 Stmt: IF LP Exp RP Stmt ELSE Stmt .

    $default  reduce using rule 30 (Stmt)


state 149

   32 LoopCompSt: LC DefList LoopStmList . RC

    RC  shift, and go to state 154


state 150

   34 LoopStmList: LoopStmt . LoopStmList

    INT        shift, and go to state 56
    ID         shift, and go to state 57
    FLOAT      shift, and go to state 58
    CHAR       shift, and go to state 59
    SelfPlusL  shift, and go to state 60
    SelfPlusR  shift, and go to state 61
    SelfDecL   shift, and go to state 62
    SelfDecR   shift, and go to state 63
    BREAK      shift, and go to state 131
    CONTINUE   shift, and go to state 132
    DPLUS      shift, and go to state 64
    LP         shift, and go to state 65
    LC         shift, and go to state 133
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67
    IF         shift, and go to state 134
    WHILE      shift, and go to state 135
    RETURN     shift, and go to state 136

    $default  reduce using rule 33 (LoopStmList)

    LoopCompSt   go to state 137
    LoopStmList  go to state 155
    LoopStmt     go to state 150
    Exp          go to state 139


state 151

   38 LoopStmt: IF LP Exp . RP LoopStmt
   39         | IF LP Exp . RP LoopStmt ELSE LoopStmt
   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   70    | Exp . DPLUS
   82    | Exp . DOT ID

    RELOP     shift, and go to state 93
    DPLUS     shift, and go to state 94
    RP        shift, and go to state 156
    PLUS      shift, and go to state 96
    MINUS     shift, and go to state 97
    STAR      shift, and go to state 98
    DIV       shift, and go to state 99
    ASSIGNOP  shift, and go to state 100
    AND       shift, and go to state 101
    OR        shift, and go to state 102
    DOT       shift, and go to state 103


state 152

   40 LoopStmt: WHILE LP Exp . RP LoopStmt
   58 Exp: Exp . ASSIGNOP Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   70    | Exp . DPLUS
   82    | Exp . DOT ID

    RELOP     shift, and go to state 93
    DPLUS     shift, and go to state 94
    RP        shift, and go to state 157
    PLUS      shift, and go to state 96
    MINUS     shift, and go to state 97
    STAR      shift, and go to state 98
    DIV       shift, and go to state 99
    ASSIGNOP  shift, and go to state 100
    AND       shift, and go to state 101
    OR        shift, and go to state 102
    DOT       shift, and go to state 103


state 153

   37 LoopStmt: RETURN Exp SEMI .

    $default  reduce using rule 37 (LoopStmt)


state 154

   32 LoopCompSt: LC DefList LoopStmList RC .

    $default  reduce using rule 32 (LoopCompSt)


state 155

   34 LoopStmList: LoopStmt LoopStmList .

    $default  reduce using rule 34 (LoopStmList)


state 156

   38 LoopStmt: IF LP Exp RP . LoopStmt
   39         | IF LP Exp RP . LoopStmt ELSE LoopStmt

    INT        shift, and go to state 56
    ID         shift, and go to state 57
    FLOAT      shift, and go to state 58
    CHAR       shift, and go to state 59
    SelfPlusL  shift, and go to state 60
    SelfPlusR  shift, and go to state 61
    SelfDecL   shift, and go to state 62
    SelfDecR   shift, and go to state 63
    BREAK      shift, and go to state 131
    CONTINUE   shift, and go to state 132
    DPLUS      shift, and go to state 64
    LP         shift, and go to state 65
    LC         shift, and go to state 133
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67
    IF         shift, and go to state 134
    WHILE      shift, and go to state 135
    RETURN     shift, and go to state 136

    LoopCompSt  go to state 137
    LoopStmt    go to state 158
    Exp         go to state 139


state 157

   40 LoopStmt: WHILE LP Exp RP . LoopStmt

    INT        shift, and go to state 56
    ID         shift, and go to state 57
    FLOAT      shift, and go to state 58
    CHAR       shift, and go to state 59
    SelfPlusL  shift, and go to state 60
    SelfPlusR  shift, and go to state 61
    SelfDecL   shift, and go to state 62
    SelfDecR   shift, and go to state 63
    BREAK      shift, and go to state 131
    CONTINUE   shift, and go to state 132
    DPLUS      shift, and go to state 64
    LP         shift, and go to state 65
    LC         shift, and go to state 133
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67
    IF         shift, and go to state 134
    WHILE      shift, and go to state 135
    RETURN     shift, and go to state 136

    LoopCompSt  go to state 137
    LoopStmt    go to state 159
    Exp         go to state 139


state 158

   38 LoopStmt: IF LP Exp RP LoopStmt .
   39         | IF LP Exp RP LoopStmt . ELSE LoopStmt

    ELSE  shift, and go to state 160

    $default  reduce using rule 38 (LoopStmt)


state 159

   40 LoopStmt: WHILE LP Exp RP LoopStmt .

    $default  reduce using rule 40 (LoopStmt)


state 160

   39 LoopStmt: IF LP Exp RP LoopStmt ELSE . LoopStmt

    INT        shift, and go to state 56
    ID         shift, and go to state 57
    FLOAT      shift, and go to state 58
    CHAR       shift, and go to state 59
    SelfPlusL  shift, and go to state 60
    SelfPlusR  shift, and go to state 61
    SelfDecL   shift, and go to state 62
    SelfDecR   shift, and go to state 63
    BREAK      shift, and go to state 131
    CONTINUE   shift, and go to state 132
    DPLUS      shift, and go to state 64
    LP         shift, and go to state 65
    LC         shift, and go to state 133
    MINUS      shift, and go to state 66
    NOT        shift, and go to state 67
    IF         shift, and go to state 134
    WHILE      shift, and go to state 135
    RETURN     shift, and go to state 136

    LoopCompSt  go to state 137
    LoopStmt    go to state 161
    Exp         go to state 139


state 161

   39 LoopStmt: IF LP Exp RP LoopStmt ELSE LoopStmt .

    $default  reduce using rule 39 (LoopStmt)
